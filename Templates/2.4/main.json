{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.30.23.60470",
      "templateHash": "9763830332380022889"
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "vmUsername": "kubeadmin",
    "vmPassword": "SuperLongPassword12345",
    "osDiskSizeGB": 128,
    "agentCount": 1,
    "agentVMSize": "Standard_D2s_v3",
    "osTypeLinux": "Linux",
    "uniqueSuffix": "[uniqueString(resourceGroup().id)]",
    "roleDefinitionId": {
      "AcrPull": {
        "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
      },
      "Contributor": {
        "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]"
      },
      "Owner": {
        "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-02-01",
      "name": "[format('st{0}', variables('uniqueSuffix'))]",
      "location": "[variables('location')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}/default/cloudshell', format('st{0}', variables('uniqueSuffix')))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}', variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-07-01",
      "name": "[format('cr{0}', variables('uniqueSuffix'))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Basic"
      }
    },
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2024-06-02-preview",
      "name": "[format('aks-{0}', variables('uniqueSuffix'))]",
      "location": "[variables('location')]",
      "tags": {
        "displayname": "AKS Cluster"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "enableRBAC": true,
        "dnsPrefix": "[format('aks-{0}', variables('uniqueSuffix'))]",
        "agentPoolProfiles": [
          {
            "name": "syspool",
            "osDiskSizeGB": "[variables('osDiskSizeGB')]",
            "count": "[variables('agentCount')]",
            "vmSize": "[variables('agentVMSize')]",
            "osType": "[variables('osTypeLinux')]",
            "type": "VirtualMachineScaleSets",
            "mode": "System"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-10-01-preview",
      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', format('cr{0}', variables('uniqueSuffix')))]",
      "name": "[guid(resourceGroup().id, format('cr{0}', variables('uniqueSuffix')), format('aks-{0}', variables('uniqueSuffix')), 'ACRPull')]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', format('aks-{0}', variables('uniqueSuffix'))), '2024-06-02-preview').identityProfile.kubeletidentity.objectId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[variables('roleDefinitionId').AcrPull.id]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', format('cr{0}', variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.ContainerService/managedClusters', format('aks-{0}', variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "DeploymentScriptIdentity",
      "location": "[variables('location')]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'DeploymentScriptIdentity'), resourceGroup().id, 'Owner')]",
      "properties": {
        "description": "Managed identity role assignment",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'DeploymentScriptIdentity'), '2018-11-30').principalId]",
        "roleDefinitionId": "[variables('roleDefinitionId').Contributor.id]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'DeploymentScriptIdentity')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "ds-deploymentscript",
      "location": "[variables('location')]",
      "kind": "AzureCLI",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'DeploymentScriptIdentity'))]": {}
        }
      },
      "properties": {
        "forceUpdateTag": "1",
        "azCliVersion": "2.9.1",
        "scriptContent": "    RG=$(az group list --query [].name --output tsv)\n    ACR=$(az acr list --resource-group $RG --query [].name --output tsv)\n    az acr login --name $ACR --expose-token --output tsv --query accessToken\n    git clone https://github.com/WayneHoggett-ACG/AKSWebApp\n    cd AKSWebApp/AKSWebApp/\n    az acr build --registry $ACR --image akswebapp:v1 .\n    ",
        "supportingScriptUris": [],
        "timeout": "PT30M",
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "PT1H"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'DeploymentScriptIdentity')]",
        "[resourceId('Microsoft.Authorization/roleAssignments', guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'DeploymentScriptIdentity'), resourceGroup().id, 'Owner'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-11-01",
      "name": "vnet1",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "subnet1",
            "properties": {
              "addressPrefix": "10.0.0.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg1')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg1')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-11-01",
      "name": "nsg1",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowAnyRDPInbound",
            "properties": {
              "description": "Allow inbound RDP traffic from the Internet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowAnySSHInbound",
            "properties": {
              "description": "Allow inbound SSH traffic from the Internet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-11-01",
      "name": "pip-1-LinuxVM",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "nic-LinuxVM-1",
      "location": "[variables('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig-1-nic-1-LinuxVM",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'pip-1-LinuxVM')]"
              },
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'vnet1'), '2019-11-01').subnets[0].id]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', 'pip-1-LinuxVM')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'vnet1')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-08-01",
      "name": "LinuxVM",
      "location": "[variables('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B2s"
        },
        "storageProfile": {
          "osDisk": {
            "name": "linuxVM-OSDisk",
            "caching": "ReadWrite",
            "createOption": "fromImage"
          },
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-focal",
            "sku": "20_04-lts-gen2",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'nic-LinuxVM-1')]"
            }
          ]
        },
        "osProfile": {
          "computerName": "LinuxVM",
          "adminUsername": "[variables('vmUsername')]",
          "adminPassword": "[variables('vmPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'nic-LinuxVM-1')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', 'LinuxVM', 'cse-LinuxVM')]",
      "location": "[variables('location')]",
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "curl -sL https://gist.githubusercontent.com/WayneHoggett-ACG/821b23445f007d200b231e0381b71b68/raw/LinuxKubeAdmin.sh | sudo bash"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', 'LinuxVM')]"
      ]
    }
  ]
}